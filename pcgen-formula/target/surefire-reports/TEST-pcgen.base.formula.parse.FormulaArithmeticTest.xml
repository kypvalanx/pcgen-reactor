<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="220" failures="0" name="pcgen.base.formula.parse.FormulaArithmeticTest" time="0.122" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="java.vm.version" value="11.0.1+13-LTS"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-11.0.1.jdk/Contents/Home/lib"/>
    <property name="gopherProxySet" value="false"/>
    <property name="maven.multiModuleProjectDirectory" value="/Users/al029298/git/pcgen-reactor"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="user.dir" value="/Users/al029298/git/pcgen-reactor"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.runtime.version" value="11.0.1+13-LTS"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.io.tmpdir" value="/var/folders/z_/m_yk1s95287cmln2vxt33_ndx_jbt8/T/"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/usr/local/Cellar/maven/3.5.4/libexec/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/al029298/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="maven.conf" value="/usr/local/Cellar/maven/3.5.4/libexec/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="55.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.net.preferIPv4Stack" value="true"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.12.6"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="library.jansi.path" value="/usr/local/Cellar/maven/3.5.4/libexec/lib/jansi-native"/>
    <property name="user.home" value="/Users/al029298"/>
    <property name="user.timezone" value="America/Chicago"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="11"/>
    <property name="java.class.path" value="/usr/local/Cellar/maven/3.5.4/libexec/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="user.name" value="al029298"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-11.0.1.jdk/Contents/Home"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="11.0.1"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/local/Cellar/maven/3.5.4/libexec"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2018-10-16"/>
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="java.vendor.version" value="18.9"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToNegativeIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToNegativeDoubleDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testIntegerNegative" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualPositiveInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualNegativeIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanIntegerNegativeInteger" time="0.007"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualNegativeIntegerInteger" time="0.004"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToNegativeDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyDoubleNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualDoubleNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponNotValidSubA" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponNotValidSubB" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualDoubleNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractNegativeIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddDoubleDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanDoubleNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderIntegerNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToDoubleNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotValidNoFunc" time="0.002"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDoublePositive" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderNegativeDoubleInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideNegativeIntegerDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddMultipleWithDouble1" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddMultipleWithDouble2" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanNegativeDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyNegativeDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDoubleNegative" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanNegativeDoubleInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddNegativeDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualIntegerInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideIntegerNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractIntegerNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractIntegerDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToPositiveInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanDoubleNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplySetExpectations" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualDoubleInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanPositiveInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToNegativeIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanPositiveDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToNegativeInteger" time="0.003"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddIntegerNegativeInteger" time="0.002"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideMultipleWithDouble1" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideMultipleWithDouble2" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractMultipleWithDouble1" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractMultipleWithDouble2" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractNegativeDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanNegativeIntegerInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddMultiple" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideDoubleNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanPositiveDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentNegativeDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyDoubleDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddDoubleNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderMultipleWithDouble1" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderMultipleWithDouble2" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderNegativeDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyIntegerNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualIntegerNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyMultipleWithDouble1" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyMultipleWithDouble2" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderNegativeIntegerInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderNegativeIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyMultiple" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToPositiveInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualPositiveInteger" time="0.002"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToIntegerNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanNegativeIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanNegativeIntegerDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToDoubleNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddNegativeIntegerDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToDoubleNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualDoubleNegativeInteger" time="0.002"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideNegativeIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanDoubleSecond" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractNegativeIntegerInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanDoubleDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualPositiveDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToDoubleNegativeDouble" time="0.002"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDoublePositiveNoLeading" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualNegativeDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractDoubleNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDoubleOne" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddNegativeIntegerInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyNegativeDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualNegativeDoubleInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideDoubleNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotValidSubA" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotValidSubB" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualPositiveDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyDoubleNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanDoubleSecond" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToIntegerInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testIntegerZero" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentDoubleInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToNegativeDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyIntegerNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanPositiveInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToDoubleFirst" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualDoubleFirst" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanIntegerNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderMultiple" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentNegativeDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToIntegerNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractDoubleNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualIntegerNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualIntegerNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExtraParens" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToDoubleDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToDoubleDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyDoubleInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderDoubleNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotValidExpon" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractIntegerNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderDoubleNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToDoubleFirst" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyNegativeIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualNegativeDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualNegativeIntegerDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanDoubleNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotValidExponRoot" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanNegativeDoubleDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDoubleNegativeNoLeading" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanDoubleNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddDoubleNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToIntegerNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToNegativeIntegerDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToDoubleSecond" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideIntegerNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddIntegerInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderSetExpectationsNumerator" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideSetExpectations" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToDoubleSecond" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualDoubleFirst" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentSetExpectationsBase" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentNegativeIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToPositiveDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotValidBooleanAdd" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualDoubleSecond" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToPositiveDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyNegativeIntegerInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentNegativeIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToNegativeDoubleInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualDoubleNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideIntegerDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderSetExpectations" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanNegativeIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanDoubleFirst" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualIntegerNegativeInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualNegativeDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanNegativeDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractMultiple" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentSetExpectationsPower" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testMultiplyIntegerDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractNegativeDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testNotEqualNegativeIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testParens" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddIntegerDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideNegativeDoubleDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddNegativeDoubleDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testEqualDoubleSecond" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanDoubleFirst" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentMultipleWithDouble1" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentMultipleWithDouble2" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentIntegerInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideNegativeDoubleInteger" time="0.002"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderIntegerNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanIntegerNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanIntegerDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanIntegerNegativeDouble" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideMultiple" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanOrEqualToNegativeIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testExponentMultiple" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddIntegerNegativeDouble" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testSubtractDoubleInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testGreaterThanIntegerInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testIntegerPositive" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testAddLevelSetExpectationsOnIntegerMath" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testLessThanOrEqualToIntegerNegativeInteger" time="0.001"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testRemainderDoubleInteger" time="0"/>
  <testcase classname="pcgen.base.formula.parse.FormulaArithmeticTest" name="testDivideSetExpectationsNumerator" time="0"/>
</testsuite>